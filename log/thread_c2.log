b'[D]    thread_c2: Starting'
b'[D]    thread_c2: Init dynamic skyline'
b'[D]    thread_c2: Product values : {2: [4, 18], 7: [12, 6]}'
b'[D]    thread_c2: Customer values : [4, 10]'
b'[D]    thread_c2: Product values sorted : [[4, 18], [12, 6]]'
b'[D]    thread_c2: Product keys sorted : [2, 7]'
b'[D]    thread_c2: [0] Now diff : [0, 8]'
b'[D]    thread_c2: [1] Next diff : [8, 4]'
b'[D]    thread_c2: [P-0] saling mendominasi [P-1]'
b'[D]    thread_c2: [1] Now diff : [8, 4]'
b'[D]    thread_c2: Hasil Dynamic Skyline : [2, 7]'
b'[D]    thread_c2: [C-2] Adding P-2 (dsl_results : [2])'
b'[D]    thread_c2: [C-2] Adding P-7 (dsl_results : [2, 7])'
b'[D]    thread_c2: [C-2] Probability: 0.5 (dsl_results : [2, 7])'
b'[D]    thread_c2: dsl = [2, 7]'
b'[D]    thread_c2: Insert PandoraBox [2][5] + 0.5 = 0.5'
b'[D]    thread_c2: Insert PandoraBox [7][5] + 0.5 = 0.5'
b'[D]    thread_c2: Product in'
b'[D]    thread_c2: Killed? False'
b'[D]    thread_c2: Product in'
b'[D]    thread_c2: Killed? False'
b'[D]    thread_c2: Product in'
b'[D]    thread_c2: Killed? False'
b'[D]    thread_c2: Product in'
b'[D]    thread_c2: Killed? True'
b'[D]    thread_c2: Exiting'
